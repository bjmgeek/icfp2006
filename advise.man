advise(1)                                                    advise(1)

NAME
     advise <action> <advice_file> [<tests_file>]

DESCRIPTION 
     advise runs the O'Cult program given in <advice_file>.  The
     fashion in which the program is run is determined by the <action>
     argument.  A set of tests is taken from <tests_file>.  This is
     optional for actions that generate tests automatically; if
     included, the supplied tests are added to those generated
     automatically.
    
ACTIONS

* run

  Run the program against tests given in <tests_file>.

* step
  
  Run the program against tests given in <tests_file>, printing each
  execution step.

* arith

  Run the program against automatically generated arithmetic tests.
  To ensure robustness, the number of tests is proportional to the
  size of the program.

  Arithmetic expressions are represented as O'Cult terms as follows:
  
  numeral ::= Z | S numeral
  exp ::= numeral | Add exp exp | Mult exp exp

  For example, the arithmetic expression (1 + 2) * 3 is written

     Mult (Add (S Z) (S (S Z))) (S (S (S (Z)))).

  The program should define addition and multiplication for arithmetic
  expressions.  Its advice should transform the term

     Compute exp

  into the numeral representing the value of the arithmetic expression
  exp.

  Sample program and test files for arithmetic are included with the
  advise distribution as arith.adv and arith.tests.

* xml

  Run the program against XML tests obtained from the Cult Wide Web.
  To ensure robustness, the number of tests is proportional to the
  size of the program.

  The Cult-Wide-Web Consortium (CW2C) has settled on the eXcessively
  Malleable Language (XML) as the format for CW2 pages.  The abstract
  syntax of this language is represented as O'Cult terms as follows:

  quality ::= Bold | Emph | Maj
  doc ::= A | B | Seq doc doc | Tag quality doc

  There are two base documents, A and B.  Documents can be sequenced
  using Seq and tagged with a quality using Tag.  The possible qualities
  are emphasized (Emph), bold (Bold), and majuscule (Maj).

  The CW2C has specified that documents are to be displayed as follows:
  (1) The document A is displayed as the character A; the document B	
      is displayed as the character B.
  (2) A sequence of documents, Seq d1 d2, is displayed by first
      displaying the document d1 and then displaying the document d2.
  (3) A tagged document, Tag q d, is displayed by displaying the
      document d with the quality q.  q is added to any other qualities
      with which d is rendered.  Note that you will need a UMv19101 or
      later terminal to properly display characters in any subset of
      {emphasized, bold, majuscule}.

  For example, the document 
      (Seq (Seq A B) (Seq B (Tag Bold (Seq B A)))) 
  is displayed as the character sequence
      A B B *B* *A*
  (where, for compatibility with older UMs, I have notated bold by
   enclosing each bold character in * *.)

  As another example, the document
      (Tag Bold (Tag Emph A))
  is displayed as the character sequence
      *_A_*
  (where, analogously, I have used the notation _ _ for emphasis).

  More than one document can display as the same character sequence; for
  example:
      Seq (Seq A A) A               and   Seq A (Seq A A)
      Tag Emph (Tag Emph A)         and   Tag Emph A
      Seq (Tag Emph A) (Tag Emph A) and   Tag Emph (Seq A A)
 
  Given the granularity of our current sand, CW2 browsers are too slow
  to display CW2 documents unless they are in _short normal form_ (SNF).
  An XML document is in SNF iff 
  (1) No piece of the document matches any of the following three patterns:
     
      Seq (Seq d1 d2) d3          
      Tag q (Tag q d)             
      Seq (Tag q d1) (Tag q d2)   

  (2) For all nested Tag expressions (Tag q1 (Tag q2 d)) in the document,
      q1 is less than q2, where Bold is less than Emph is less than Maj.

  The program should implement this SNF transformation.  Its advice
  should transform the term (SNF d) into a short normal form that
  displays as the same character sequence as d.
